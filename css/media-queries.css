/*A mobile first approach to writing CSS means writing your default styling for a mobile device, then using media queries to change the layout based on larger devices.*/

/*Mobile View= Default CSS*/
* {
    box-sizing: border-box;
}

body {
    display: flex;
    flex-direction: column;
    font-family: sans-serif;
    margin: 1em;
}

.alert-info a{
    background-color: #BEFFFF;
    width: 100%;
    height: 3.5em;
    display: flex;
    align-items: center;
    justify-content: center;
    color: black;
    text-decoration: none;
    border: 2px solid lightgray;
}

h1 {
    margin: .2em auto .5em auto;
    font-size: 3em;
}
/* method of getting into details so they don't battle one another is to go containter to item:
.nav-links to .nav-links li to .nav-links
*/
.nav-links {
    list-style: none;
    display: flex;
    flex-direction: column;
    padding: 0;
    margin: 0;
}

.nav-links li {
    background: lightgray;
    display: flex;
    height: 3.5em;
    width: 100%;
    margin-bottom: .7em;
}

.nav-links a {
    margin: auto;
}

/*the header-img is a class, that holds the image it's self. We sent the container, to width 100% and tell the child to 100% of what's allowed by the parent. The body is width 100% with a margin, header-img is 100% of that and img is 100% of that.   */

.header-img  {
    width: 100%;

}

img {
    width: 100%;
}

.sub-section h2 {
    font-size: 1.25em;
}

.sub-section {
    font-style: italic;
}

footer {
    margin-top: 4em;
}

#social-media-links {
    height: auto;
    width: 100%;
    max-height: 10em;
    max-width: 10em;
    display: inline-flex;
    float: right;
    justify-content: space-evenly;
}

/*end line----------------for Mobile View*/
/*start media query*/
/*start Desktop View*/

@media screen and (min-width: 767px){
    body {
        flex-direction: row;
        flex-wrap: wrap;
    }
    .hidden-on-desktop {
        display: none;
    }
    h1 {
        margin: .2em auto .5em auto;
        font-size: 2.5em;
    }
    .nav-links {
        flex-direction: row;
    }
    .nav-links li {
        background: none;
        margin: 0 .75em;
    }
    section p {
        padding-right: 1em;
    }
    .main {
        flex-basis: 60%;
    }
    .sub-section {
        flex-basis: 40%;
    }



}



/*<!--Breakpoints*/
/*    Breakpoints are what we refer to as major resolution changes, which you specify with media queries, usually based on popular device configurations. They are called breakpoints because traditionally major layout elements are broken and repositioned, though not always the case, and the name stuck.*/

/*You can determine whatever breakpoint px size you want, but you can find plenty of resources online to find the most frequently used breakpoints.*/


/*!* Small devices (phones and pocket devices, 576 and up) *!*/
/*@media screen and (min-width:576px) { !* ... *! }*/

/*!* Medium devices (tablets, 768px and up) *!*/
/*@media screen and (min-width:768px) { !* ... *! }*/

/*!* Large devices (desktops, 992px and up) *!*/
/*@media screen and (min-width:992px) { !* ... *! }*/

/*!* Extra large devices (large desktops, 1200px and up) *!*/
/*@media screen and (min-width:1200px) { !* ... *! }-->*/

/*/* Small devices (phones and pocket devices, 576 and up) */
/*@media screen and (min-width:576px) { !* ... *! }*/

/*!* Medium devices (tablets, 768px and up) *!*/
/*@media screen and (min-width:768px) { !* ... *! }*/

/*!* Large devices (desktops, 992px and up) *!*/
/*@media screen and (min-width:992px) { !* ... *! }*/

/*!* Extra large devices (large desktops, 1200px and up) *!*/
/*@media screen and (min-width:1200px) { !* ... *! }*/
/**!*/

