/*A mobile first approach to writing CSS means writing your default styling for a mobile device, then using media queries to change the layout based on larger devices.*/

* {
    box-sizing: border-box;
}

body {
    display: flex;
    flex-direction: column;
    font-family: sans-serif;
    margin: 1em;
}

.alert-info a{
    background-color: #BEFFFF;
    width: 100%;
    height: 3.5em;
    display: flex;
    align-items: center;
    justify-content: center;
    color: black;
    text-decoration: none;
    border: 2px solid lightgray;
}

h1 {
    margin: .2em auto .5em auto;
    font-size: 3em;
}
/* method of getting into details so they don't battle one another is to go containter to item:
.nav-links to .nav-links li to .nav-links
*/
.nav-links {
    list-style: none;
    display: flex;
    flex-direction: column;
    padding: 0;
    margin: 0;
}

.nav-links li {
    background: lightgray;
    display: flex;
    height: 3.5em;
    width: 100%;
    margin-bottom: .7em;
}

.nav-links a {
    margin: auto;
}

/*the header-img is a class, that holds the image it's self. We sent the container, to width 100% and tell the child to 100% of what's allowed by the parent. The body is width 100% with a margin, header-img is 100% of that and img is 100% of that.   */

.header-img  {
    width: 100%;

}

img {
    width: 100%;
}

.sub-section h2 {
    font-size: 1.25em;
}

.sub-section {
    font-style: italic;
}

footer {
    margin-top: 3em;
}

#social-media-links {
    height: auto;
    width: 100%;
    max-height: 10em;
    max-width: 10em;
    display: inline-flex;
    float: right;
    justify-content: space-evenly;
}
